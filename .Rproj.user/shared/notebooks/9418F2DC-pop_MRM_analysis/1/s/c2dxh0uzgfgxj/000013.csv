"0","# Load necessary libraries"
"0","library(caret)"
"0","library(randomForest)"
"0","library(Metrics)"
"0",""
"0","data <- read_csv('final_population_dataset.csv')"
"1","[1mRows: [22m[34m160[39m [1mColumns: [22m[34m18[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (1): Category
[32mdbl[39m (17): Area, height, Water, Bareland, Vegetation, Built...
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","# Normalize the dataset (excluding 'total_pop' and categorical variables)"
"0","numeric_features <- sapply(data, is.numeric)"
"0","numeric_features[""total_pop""] <- FALSE  # Exclude target variable from normalization"
"0",""
"0","data[numeric_features] <- scale(data[numeric_features])"
"0",""
"0","# Splitting the data into train and test sets"
"0","set.seed(123)"
"0","trainIndex <- createDataPartition(data$total_pop, p = 0.8, list = FALSE)"
"0","train_data <- data[trainIndex, ]"
"0","test_data <- data[-trainIndex, ]"
"0",""
"0","# Train the Random Forest model"
"0","rf_model <- randomForest(total_pop ~ ., data = train_data, ntree = 500, importance = TRUE)"
"0",""
"0","# Make predictions on the test data"
"0","predictions <- predict(rf_model, newdata = test_data)"
"0",""
"0","# Calculate metrics"
"0","mape_val <- mape(test_data$total_pop, predictions)"
"0","accuracy <- sum(round(predictions) == test_data$total_pop) / nrow(test_data)"
"0",""
"0","# Print the results"
"0","cat(""MAPE:"", mape_val, ""\n"")"
"1","MAPE:"
"1"," "
"1","2.991418"
"1"," "
"1","
"
"0","cat(""Accuracy:"", accuracy, ""\n"")"
"1","Accuracy:"
"1"," "
"1","0.03333333"
"1"," "
"1","
"
"0","# Additional metrics (RMSE, R-squared, etc.)"
"0","rmse_val <- rmse(test_data$total_pop, predictions)"
"0","r2_val <- cor(test_data$total_pop, predictions)^2"
"0",""
"0","cat(""RMSE:"", rmse_val, ""\n"")"
"1","RMSE:"
"1"," "
"1","24.26126"
"1"," "
"1","
"
"0","cat(""R-squared:"", r2_val, ""\n"")"
"1","R-squared:"
"1"," "
"1","0.1366954"
"1"," "
"1","
"
